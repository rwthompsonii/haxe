// Generated by Haxe 3.3.0
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={})
public class Reflect
{
	public static Bool hasField(Any? o, String? field)
	{
		//line 30 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return false
	}
	
	
	public static Any? field(Any? o, String? field)
	{
		//line 36 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return nil
	}
	
	
	public static setField(Any? o, String? field, Any? value)
	{
	}
	
	
	public static Any? getProperty(Any? o, String? field)
	{
		//line 47 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return nil
	}
	
	
	public static setProperty(Any? o, String? field, Any? value)
	{
	}
	
	
	public static Any? callMethod(Any? o, Any? func, haxe.root.Array args)
	{
		//line 58 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return nil
	}
	
	
	public static haxe.root.Array<String??> fields(Any? o)
	{
		//line 64 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return nil
	}
	
	
	public static Bool isFunction(Any? f)
	{
		//line 70 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return false
	}
	
	
	public static <T> Int compare(T a, T b)
	{
		//line 76 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return 0
	}
	
	
	public static Bool compareMethods(Any? f1, Any? f2)
	{
		//line 82 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return false
	}
	
	
	public static Bool isObject(Any? v)
	{
		//line 88 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return false
	}
	
	
	public static Bool isEnumValue(Any? v)
	{
		//line 94 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return false
	}
	
	
	public static Bool deleteField(Any? o, String? field)
	{
		//line 100 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return false
	}
	
	
	public static <T> T copy(T o)
	{
		//line 106 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return o
	}
	
	
	public static Any? makeVarArgs([ !TypeError Array<Dynamic> -> Dynamic ] f)
	{
		//line 113 "/home/ron/haxe/std/swift/_std/Reflect.hx"
		return nil
	}
	
	
}


