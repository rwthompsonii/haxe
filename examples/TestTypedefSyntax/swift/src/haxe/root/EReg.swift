// Generated by Haxe 3.3.0
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={})
public class EReg
{
	public EReg(String? r, String? opt)
	{
	}
	
	
	public static String? convert(String? r)
	{
		//line 30 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return r
	}
	
	
	public Bool match(String? s)
	{
		//line 34 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return false
	}
	
	
	public String? matched(Int n)
	{
		//line 39 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public String? matchedLeft()
	{
		//line 44 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public String? matchedRight()
	{
		//line 49 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public Any? matchedPos()
	{
		//line 54 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return [ obj decl not supported ]
	}
	
	
	public Bool matchSub(String? s, Int pos, Int len)
	{
		//line 59 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return false
	}
	
	
	public haxe.root.Array<String??> split(String? s)
	{
		//line 64 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return new haxe.root.Array<String??>(new Array<String?>?{s})
	}
	
	
	public final Int start(Int group)
	{
		//line 69 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return 0
	}
	
	
	public final Int len(Int group)
	{
		//line 74 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return 0
	}
	
	
	public String? replace(String? s, String? by)
	{
		//line 79 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public String? map(String? s, [ !TypeError EReg -> String ] f)
	{
		//line 84 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
}


