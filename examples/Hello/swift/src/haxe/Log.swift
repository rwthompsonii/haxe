// Generated by Haxe 3.3.0
package haxe;

import haxe.root.*;

public class Log : haxe.lang.HxObject
{
	public class dynamic func trace ( v : Any?, ?infos : Any? ) -> Void = (v : Any?, infos : Any?) -> Void in 
	{
		//line 84 "/home/ron/haxe/std/haxe/Log.hx"
		var str : String? = nil
		//line 86 "/home/ron/haxe/std/haxe/Log.hx"
		v = (v) as String?
		//line 88 "/home/ron/haxe/std/haxe/Log.hx"
		if ((infos != nil)) 
		{
			//line 89 "/home/ron/haxe/std/haxe/Log.hx"
			str = ((((haxe.lang.Runtime.getField(infos, "fileName", true) + ":") + (haxe.lang.Runtime.getField_f(infos, "lineNumber", true)) as Int) + ": ") + haxe.root.Std.string(v))
			//line 90 "/home/ron/haxe/std/haxe/Log.hx"
			if ((haxe.lang.Runtime.getField(infos, "customParams", true) != nil)) 
			{
				//line 92 "/home/ron/haxe/std/haxe/Log.hx"
				str += ("," + haxe.lang.Runtime.getField(infos, "customParams", true)!.join(","))
			}
			
		}
		else
		{
			//line 95 "/home/ron/haxe/std/haxe/Log.hx"
			str = v
		}
		
		//line 104 "/home/ron/haxe/std/haxe/Log.hx"
		print(str)
	}
	
	
}


