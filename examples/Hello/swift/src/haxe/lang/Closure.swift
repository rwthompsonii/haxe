// Generated by Haxe 3.3.0
package haxe.lang;

import haxe.root.*;

public class Closure : haxe.lang.VarArgsBase
{
	public init(obj : Any?, field : String?) ->  Void
	{
		//line 71 "/home/ron/haxe/std/swift/internal/Function.hx"
		super(-1, -1)
		//line 72 "/home/ron/haxe/std/swift/internal/Function.hx"
		this!.obj = obj
		//line 73 "/home/ron/haxe/std/swift/internal/Function.hx"
		this!.field = field
	}
	
	
	public dynamic func obj Any?
	
	public dynamic func field String?
	
	public override func __hx_invokeDynamic(dynArgs : haxe.root.Array) ->  Any?
	{
		//line 78 "/home/ron/haxe/std/swift/internal/Function.hx"
		return haxe.lang.Runtime.callField(this!.obj, this!.field, dynArgs)
	}
	
	
	public func equals(obj : Any?) ->  Bool
	{
		//line 83 "/home/ron/haxe/std/swift/internal/Function.hx"
		if ((obj == nil)) 
		{
			//line 84 "/home/ron/haxe/std/swift/internal/Function.hx"
			return false
		}
		
		//line 86 "/home/ron/haxe/std/swift/internal/Function.hx"
		var c : haxe.lang.Closure = (obj) as haxe.lang.Closure
		//line 87 "/home/ron/haxe/std/swift/internal/Function.hx"
		if ((c!.obj == this!.obj)) 
		{
			//line 87 "/home/ron/haxe/std/swift/internal/Function.hx"
			return (c!.field == this!.field)
		}
		else
		{
			//line 87 "/home/ron/haxe/std/swift/internal/Function.hx"
			return false
		}
		
	}
	
	
	public func hashCode() ->  Int
	{
		//line 92 "/home/ron/haxe/std/swift/internal/Function.hx"
		return ((haxe.lang.Runtime.callField(this!.obj, "hashCode", nil)) as Any? ^ (haxe.lang.Runtime.callField(this!.field, "hashCode", nil)) as Int)
	}
	
	
}


