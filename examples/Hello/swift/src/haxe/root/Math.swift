// Generated by Haxe 3.3.0
package haxe.root;

import haxe.root.*;

public class Math
{
	public class dynamic func PI Double
	
	public class func get_PI() ->  Double
	{
		return Double.pi
	}
	
	
	public class dynamic func NaN Double
	
	public class func get_NaN() ->  Double
	{
		return Double.nan
	}
	
	
	public class dynamic func NEGATIVE_INFINITY Double
	
	public class func get_NEGATIVE_INFINITY() ->  Double
	{
		return -Float.infinity
	}
	
	
	public class dynamic func POSITIVE_INFINITY Double
	
	public class func get_POSITIVE_INFINITY() ->  Double
	{
		return Float.infinity
	}
	
	
	public class func abs(v : Double) ->  Double
	{
		return Swift.abs(v)
	}
	
	
	public class func min(a : Double, b : Double) ->  Double
	{
		return Swift.min(a, b)
	}
	
	
	public class func max(a : Double, b : Double) ->  Double
	{
		return Swift.max(a, b)
	}
	
	
	public class func sin(v : Double) ->  Double
	{
		return sin(v)
	}
	
	
	public class func cos(v : Double) ->  Double
	{
		return cos(v)
	}
	
	
	public class func atan2(y : Double, x : Double) ->  Double
	{
		return atan2(y, x)
	}
	
	
	public class func tan(v : Double) ->  Double
	{
		return tan(v)
	}
	
	
	public class func exp(v : Double) ->  Double
	{
		return exp(v)
	}
	
	
	public class func log(v : Double) ->  Double
	{
		return log(v)
	}
	
	
	public class func sqrt(v : Double) ->  Double
	{
		return sqrt(v)
	}
	
	
	public class func round(v : Double) ->  Int
	{
		return Int(round(v))
	}
	
	
	public class func floor(v : Double) ->  Int
	{
		return Int(floor(v))
	}
	
	
	public class func ceil(v : Double) ->  Int
	{
		return Int(ceil(v))
	}
	
	
	public class func atan(v : Double) ->  Double
	{
		return atan(v)
	}
	
	
	public class func fround(v : Double) ->  Double
	{
		return round(v)
	}
	
	
	public class func ffloor(v : Double) ->  Double
	{
		return floor(v)
	}
	
	
	public class func fceil(v : Double) ->  Double
	{
		return ceil(v)
	}
	
	
	public class func asin(v : Double) ->  Double
	{
		return asin(v)
	}
	
	
	public class func acos(v : Double) ->  Double
	{
		return acos(v)
	}
	
	
	public class func pow(v : Double, exp : Double) ->  Double
	{
		return pow(v, exp)
	}
	
	
	public class func random() ->  Double
	{
		return (Float(random()) / Float(Int32.max))
	}
	
	
	public class func isFinite(f : Double) ->  Bool
	{
		return f.isFinite
	}
	
	
	public class func isNaN(f : Double) ->  Bool
	{
		return f.isNan
	}
	
	
}


