// Generated by Haxe 3.3.0
package haxe.root;

import haxe.root.*;

public class Std
{
	public class func is(v : Any?, t : Any?) ->  Bool
	{
		return (v is t)
	}
	
	
	public class func string(s : Any?) ->  String?
	{
		return (s is String) ? s as! String : String(s)
	}
	
	
	public class func _int(x : Double) ->  Int
	{
		return Int(x)
	}
	
	
	public class func parseInt(x : String?) ->  Any?
	{
		return (x != nil) ? Int(x) : nil
	}
	
	
	public class func parseFloat(x : String?) ->  Double
	{
		return (x != nil) ? Float(x) : nil
	}
	
	
	public class func instance <T, S>(value : T, c : Any?) ->  S
	{
		return c != nil ? (value != nil ? value as? c : nil) : nil
	}
	
	
	public class func random(x : Int) ->  Int
	{
		//line 59 "/home/ron/haxe/std/swift/_std/Std.hx"
		if ((x <= 0)) 
		{
			//line 59 "/home/ron/haxe/std/swift/_std/Std.hx"
			return 0
		}
		
		//line 60 "/home/ron/haxe/std/swift/_std/Std.hx"
		return haxe.root.Std._int((haxe.root.Math.random() * x))
	}
	
	
}


