// Generated by Haxe 3.3.0
package haxe.root;

import haxe.root.*;

public class EReg : haxe.lang.HxObject
{
	public init(r : String?, opt : String?) ->  Void
	{
	}
	
	
	public class func convert(r : String?) ->  String?
	{
		//line 30 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return r
	}
	
	
	public func match(s : String?) ->  Bool
	{
		//line 34 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return false
	}
	
	
	public func matched(n : Int) ->  String?
	{
		//line 39 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public func matchedLeft() ->  String?
	{
		//line 44 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public func matchedRight() ->  String?
	{
		//line 49 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public func matchedPos() ->  Any?
	{
		//line 54 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return haxe.lang.DynamicObject([], [], [], [])
	}
	
	
	public func matchSub(s : String?, pos : Int, len : Any?) ->  Bool
	{
		//line 59 "/home/ron/haxe/std/swift/_std/EReg.hx"
		var __temp_len1 : Int = ( ((len == nil)) ? (-1) : ((len) as Int) )
		//line 59 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return false
	}
	
	
	public func split(s : String?) ->  haxe.root.Array<String??>
	{
		//line 64 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return haxe.root.Array<String??>([])
	}
	
	
	public final func start(group : Int) ->  Int
	{
		//line 69 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return 0
	}
	
	
	public final func len(group : Int) ->  Int
	{
		//line 74 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return 0
	}
	
	
	public func replace(s : String?, by : String?) ->  String?
	{
		//line 79 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public func map(s : String?, f : ( haxe.root.EReg ) -> String?) ->  String?
	{
		//line 84 "/home/ron/haxe/std/swift/_std/EReg.hx"
		return ""
	}
	
	
	public override func __hx_getField(field : String?, throwErrors : Bool, isCheck : Bool, handleProperties : Bool) ->  Any?
	{
		//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
		switch (field)
		{
			case "map":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.map
			}
			
			
			case "replace":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.replace
			}
			
			
			case "len":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.len
			}
			
			
			case "start":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.start
			}
			
			
			case "split":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.split
			}
			
			
			case "matchSub":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matchSub
			}
			
			
			case "matchedPos":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matchedPos
			}
			
			
			case "matchedRight":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matchedRight
			}
			
			
			case "matchedLeft":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matchedLeft
			}
			
			
			case "matched":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matched
			}
			
			
			case "match":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.match
			}
			
			
			default:
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return super!.__hx_getField(field, throwErrors, isCheck, handleProperties)
			}
			
		}
		
	}
	
	
	public override func __hx_invokeField(field : String?, dynargs : haxe.root.Array) ->  Any?
	{
		//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
		switch (field)
		{
			case "map":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.map(dynargs!.__get(0), dynargs!.__get(1))
			}
			
			
			case "replace":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.replace(dynargs!.__get(0), dynargs!.__get(1))
			}
			
			
			case "len":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.len(dynargs!.__get(0))
			}
			
			
			case "start":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.start(dynargs!.__get(0))
			}
			
			
			case "split":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.split(dynargs!.__get(0))
			}
			
			
			case "matchSub":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matchSub(dynargs!.__get(0), dynargs!.__get(1), dynargs!.__get(2))
			}
			
			
			case "matchedPos":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matchedPos()
			}
			
			
			case "matchedRight":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matchedRight()
			}
			
			
			case "matchedLeft":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matchedLeft()
			}
			
			
			case "matched":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.matched(dynargs!.__get(0))
			}
			
			
			case "match":
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return this!.match(dynargs!.__get(0))
			}
			
			
			default:
			{
				//line 23 "/home/ron/haxe/std/swift/_std/EReg.hx"
				return super!.__hx_invokeField(field, dynargs)
			}
			
		}
		
	}
	
	
}


